import sys
import os
from datetime import datetime

# –§–∏–∫—Å–∏—Ä—É–µ–º OpenMP –æ—à–∏–±–∫—É –Ω–∞ macOS
os.environ['KMP_DUPLICATE_LIB_OK'] = 'TRUE'

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from core.tool_system import NativeToolSystem
from tools.memory.core_memory import CoreMemory, create_core_memory_tools
from tools.memory.knowledge_base import KnowledgeBase, create_knowledge_tools
from tools.memory.dialog_fifo import DialogFIFO, create_dialog_fifo_tools


class TripleMemoryChat:
    """–ß–∞—Ç —Å —Ç—Ä–æ–π–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –ø–∞–º—è—Ç–∏"""
    
    def __init__(self, model_name: str = "Qwen/Qwen3-4B"):
        self.core_memory = CoreMemory()
        self.knowledge_base = KnowledgeBase(model_name)
        self.dialog_fifo = DialogFIFO(model_name, max_prompt_tokens=2500)
        self.tool_system = NativeToolSystem(model_name)

        self._register_tools()
    
    def _register_tools(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
        # Core Memory
        for tool_name, tool_config in create_core_memory_tools(self.core_memory).items():
            self.tool_system.register_tool(**tool_config)
        
        # Knowledge Base  
        for tool_name, tool_config in create_knowledge_tools(self.knowledge_base).items():
            self.tool_system.register_tool(**tool_config)
        
        # Dialog FIFO
        for tool_name, tool_config in create_dialog_fifo_tools(self.dialog_fifo).items():
            self.tool_system.register_tool(**tool_config)
    
    def _create_prompt(self, user_message: str) -> str:
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º –ø–∞–º—è—Ç–∏"""
        
        core_context = self.core_memory.get_core_memory_context()
        dialog_context = self.dialog_fifo.get_dialog_context()
        
        return f"""–¢—ã —É–º–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:

–£ —Ç–µ–±—è –µ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞–º—è—Ç—å—é:
- Core Memory: 
  * core_memory_add_human - –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–≤—è–∑–∞–Ω–Ω—É—é —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  * core_memory_edit_human - –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–≤—è–∑–∞–Ω–Ω—É—é —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–Ω–∞–¥–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä—ã–π —Ñ–∞–∫—Ç/—Å—Ç–∞—Ä—ã–µ —Ñ–∞–∫—Ç—ã –Ω–∞ –Ω–æ–≤—ã–π/–Ω–æ–≤—ã–µ, —Ç–æ –µ—Å—Ç—å "–ò–º–µ–µ—Ç B2 —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ" -> "–ò–º–µ–µ—Ç C1 —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ")
  * core_memory_add_persona - –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä—Å–æ–Ω–µ —á–∞—Ç –±–æ—Ç–∞
  * core_memory_edit_persona - –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä—Å–æ–Ω–µ —á–∞—Ç –±–æ—Ç–∞
- Knowledge Base: –¥–ª—è –æ–±—â–∏—Ö —Ñ–∞–∫—Ç–æ–≤ –∏ –∑–Ω–∞–Ω–∏–π (–Ω–µ –ª–∏—á–Ω—ã—Ö)
  * knowledge_add_fact - –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–∫—Ç –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π (–Ω–æ–≤—ã–π —Ñ–∞–∫—Ç)
  * knowledge_edit_fact - –æ–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–∫—Ç –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π (–Ω–∞–¥–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä—ã–π —Ñ–∞–∫—Ç/—Å—Ç–∞—Ä—ã–µ —Ñ–∞–∫—Ç—ã –Ω–∞ –Ω–æ–≤—ã–π/–Ω–æ–≤—ã–µ, —Ç–æ –µ—Å—Ç—å "–≠–π—Ñ–µ–ª–µ–≤–∞ –±–∞—à–Ω—è –±—ã–ª–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –≤ 1889 –≥–æ–¥—É" -> "–≠–π—Ñ–µ–ª–µ–≤–∞ –±–∞—à–Ω—è –±—ã–ª–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –≤ 1887 –≥–æ–¥—É")
  * knowledge_search - –ø–æ–∏—Å–∫ —Ñ–∞–∫—Ç–æ–≤ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π (–ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º)
- Dialog FIFO: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Å—Ç–æ—Ä–∏–µ–π –¥–∏–∞–ª–æ–≥–æ–≤

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–∞–º—è—Ç–∏:
- –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–ª–∏ —Å–≤—è–∑–∞–Ω–∞ —Å –Ω–∏–º ‚Üí –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π core_memory_add_human –∏–ª–∏ core_memory_edit_human
- –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–≤—è–∑–∞–Ω–∞ —Å —Ç–æ–±–æ–π (—á–∞—Ç –±–æ—Ç–æ–º) ‚Üí –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π core_memory_add_persona –∏–ª–∏ core_memory_edit_persona  
- –ï—Å–ª–∏ —É–ø–æ–º–∏–Ω–∞—é—Ç—Å—è –æ–±—â–∏–µ —Ñ–∞–∫—Ç—ã (–Ω–µ –ª–∏—á–Ω—ã–µ) ‚Üí –∏—Å–ø–æ–ª—å–∑—É–π knowledge_add_fact –∏–ª–∏ knowledge_edit_fact

–ê–õ–ì–û–†–ò–¢–ú:
1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
2. –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ/—Ç–µ–±–µ/–æ–±—â–∏–µ —Ñ–∞–∫—Ç—ã ‚Üí –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–∑–æ–≤–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ü–ï–†–ï–î –æ—Ç–≤–µ—Ç–æ–º
3. –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–∞–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
4. –ú–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –≤—ã–∑–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ

–ü–†–ò–ú–ï–†–´:
- "–º–µ–Ω—è –∑–æ–≤—É—Ç –ü–µ—Ç—Ä" ‚Üí core_memory_add_human("–ò–º—è: –ü–µ—Ç—Ä")
- "—Ç–µ–±—è –∑–æ–≤—É—Ç –ú–∞–∫—Å" ‚Üí core_memory_add_persona("–ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∞–∫—Å")
- "Python —Å–æ–∑–¥–∞–Ω –≤ 1991" ‚Üí knowledge_add_fact("Python —Å–æ–∑–¥–∞–Ω –≤ 1991 –≥–æ–¥—É")
- "–ø–æ–¥–Ω–∏–º–∞–ª—Å—è –Ω–∞ –≠–≤–µ—Ä–µ—Å—Ç, —ç—Ç–æ —Å–∞–º–∞—è –≤—ã—Å–æ–∫–∞—è –≥–æ—Ä–∞" ‚Üí 
  1) core_memory_add_human("–ü–æ–¥–Ω–∏–º–∞–ª—Å—è –Ω–∞ –≠–≤–µ—Ä–µ—Å—Ç –≤ –ø—Ä–æ—à–ª–æ–º –º–µ—Å—è—Ü–µ")
  2) knowledge_add_fact("–≠–≤–µ—Ä–µ—Å—Ç - —Å–∞–º–∞—è –≤—ã—Å–æ–∫–∞—è –≥–æ—Ä–∞ –≤ –º–∏—Ä–µ")

–ü–†–ê–í–ò–õ–û –†–ê–ó–î–ï–õ–ï–ù–ò–Ø:
- –ß—Ç–æ –¥–µ–ª–∞–ª/–¥—É–º–∞–µ—Ç/–ª—é–±–∏—Ç –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ ‚Üí core_memory_*_human
- –ß—Ç–æ –¥–µ–ª–∞–µ—à—å/–¥—É–º–∞–µ—à—å –¢–´ (–±–æ—Ç) ‚Üí core_memory_*_persona  
- –û–±—â–∏–µ –§–ê–ö–¢–´ –û –ú–ò–†–ï ‚Üí knowledge_add_fact

–ò—Å–ø–æ–ª—å–∑—É–π –¥—é–±—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ç–≤–æ–µ–º –ø—Ä–æ–º–ø—Ç–µ –∏–ª–∏ –Ω–∞–π–¥–µ–Ω–Ω—É—é –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π —Å–≤—è–∑–∞–Ω–Ω—É—é —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

{core_context}

{dialog_context}

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_message}

–û—Ç–≤–µ—Ç:"""
    
    def process_message(self, user_message: str) -> str:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        try:
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
            prompt = self._create_prompt(user_message)
            
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
            response = self.tool_system.generate_response(
                prompt,
                max_tokens=800,
                temperature=0.7
            )
            self.dialog_fifo.add_dialog(user_message, response)
            #self._log_memory_state()
            
            return response
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞: {e}"
    
    def _log_memory_state(self):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º –ø–∞–º—è—Ç–∏"""
        print("\n" + "‚îÄ" * 60)
        print("üìä –°–û–°–¢–û–Ø–ù–ò–ï –ü–ê–ú–Ø–¢–ò:")
        print("‚îÄ" * 60)
        
        # Core Memory - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        print("üß† CORE MEMORY:")
        print(f"   üë§ Human: {self.core_memory.human.content if self.core_memory.human.content.strip() else '(–ø—É—Å—Ç–æ)'}")
        print(f"   ü§ñ Persona: {self.core_memory.persona.content if self.core_memory.persona.content.strip() else '(–ø—É—Å—Ç–æ)'}")
        
        # Knowledge Base
        kb_stats = self.knowledge_base.get_stats()
        print("üìö " + kb_stats.split('\n')[0])  # –¢–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        for line in kb_stats.split('\n')[1:]:
            if line.strip():
                print("   " + line)
                
        # Dialog FIFO
        fifo_stats = self.dialog_fifo.get_stats()
        print("üí¨ " + fifo_stats.split('\n')[0])  # –¢–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        for line in fifo_stats.split('\n')[1:]:
            if line.strip():
                print("   " + line)
        
        print("‚îÄ" * 60)
    
    def show_stats(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º"""
        print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–ê–ú–Ø–¢–ò:")
        print("=" * 50)
        print(self.core_memory.get_stats())
        print("\n" + self.knowledge_base.get_stats())
        print("\n" + self.dialog_fifo.get_stats())
    
    def run(self):
        
        while True:
            try:
                user_input = input("\nüë§ –í—ã: ").strip()
                
                if not user_input:
                    continue
                
                if user_input == "/exit":
                    print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    break
                
                print("ü§ñ –ë–æ—Ç: ", end="")
                response = self.process_message(user_input)
                print(response)
                
            except KeyboardInterrupt:
                print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        chat = TripleMemoryChat()
        chat.run()
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main() 